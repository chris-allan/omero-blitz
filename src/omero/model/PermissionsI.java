/*
 *   $Id$
 * 
 *   Copyright 2006 University of Dundee. All rights reserved.
 *   Use is subject to license terms supplied in LICENSE.txt
 * 
 */

package omero.model;


// Generated by templates/java_objects.vm



public class PermissionsI 
  extends Permissions 
  implements ome.api.ModelBased 

{ 

  
    public Long getPerm1() {
        return new Long(this.perm1);
    }
    
    public void setPerm1(Long perm1) {
        this.perm1 = perm1 == null ? 0 : perm1.longValue();
         
    }
 
    public void copyObject(ome.util.Filterable model, ome.util.ModelMapper _mapper) {
        omero.util.IceMapper mapper = (omero.util.IceMapper) _mapper;
        if (model instanceof ome.model.internal.Permissions){
            ome.model.internal.Permissions source = (ome.model.internal.Permissions) model;
            this.setPerm1((Long) mapper.findTarget(ome.util.Utils.internalForm(source)));
	  } else {
             throw new IllegalArgumentException(
               "Permissions cannot copy from " + 
               (model==null ? "null" : model.getClass().getName()));
	  }
    }

     public ome.util.Filterable fillObject(ome.util.ReverseModelMapper _mapper) {
         throw new UnsupportedOperationException();
    }


    public void unload(Ice.Current c) {
      this.setPerm1( null );
    }



}

